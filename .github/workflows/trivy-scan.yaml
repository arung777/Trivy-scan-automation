name: Trivy Image Scan
on:
  pull_request:
    branches: [main]
    paths: ['applications/**']
  push:
    branches: [main]
    paths: ['applications/**']
jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Install Trivy (no implicit scan)
      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.4
        # optional: pin the Trivy binary version you want installed
        with:
          version: v0.67.2
      # Install yq without snap (faster on GitHub runners)
      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          YQ_VERSION=v4.44.3
          curl -sSL -o /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          yq --version
      # Extract images from common Kubernetes fields; de-dup and ignore nulls
      # List manifests (debug)
      - name: List manifests under applications/**
        run: |
          shopt -s globstar nullglob
          files=(applications/**/*.yml applications/**/*.yaml)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No YAML files under applications/**"
          else
            printf '%s\n' "${files[@]}"
          fi
      # Extract images (robust)
      - name: Extract container images from manifests
        id: extract-images
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
      
          echo "🔍 Extracting container images from manifests..."
          : > images.txt
      
          yq -r '.. | .image? // ""' applications/**/*.yaml \
          | sed '/^$/d; /^---$/d' | sort -u > images.txt
      
          echo "✅ Images found:"
          cat images.txt || echo "No images found."
          echo "found=$(wc -l < images.txt | tr -d ' ')" >> "$GITHUB_OUTPUT"

      # Skip scan if none found (do NOT fail)
      - name: Skip when no images
        if: steps.extract-images.outputs.found == '0'
        run: echo "No container images found under applications/**. Skipping scan."
      # Run Trivy on each image (only if we found any)
      - name: Run Trivy scan on each image and generate SARIF
        if: steps.extract-images.outputs.found != '0'
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p trivy-sarif
          while IFS= read -r image; do
            [ -z "$image" ] && continue
            echo "Scanning image: $image"
            safe_name="$(echo "$image" | sed 's/[^a-zA-Z0-9._-]/-/g')"
            trivy image \
              --format sarif \
              --severity HIGH,CRITICAL \
              --ignore-unfixed \
              --no-progress \
              --output "trivy-sarif/trivy-${safe_name}.sarif" \
              "$image"
          done < images.txt
            # Upload all SARIF files in a directory (supported by GitHub)
            - name: Upload Trivy SARIF reports to Security tab
              uses: github/codeql-action/upload-sarif@v3
              with:
                sarif_file: trivy-sarif
      - name: Upload SARIF artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: trivy-sarif/
